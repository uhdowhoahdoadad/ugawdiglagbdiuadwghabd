local Library = loadstring(game:HttpGet(\"https://raw.githubusercontent.com/VulcanOfficial/vulcanuilib/refs/heads/main/loader.lua\"))()\r\n\r\nLibrary.NewWindow(\"Vulcan Universal Aimbot\")\r\n\r\nlocal toggleLoop -- Store the loop reference\r\nlocal isRunning = false -- To track if the loop is active\r\n\r\nlocal player = game.Players.LocalPlayer\r\nlocal camera = workspace.CurrentCamera\r\nlocal UserInputService = game:GetService(\"UserInputService\")\r\n\r\nLibrary.NewToggle(\"Aimbot Toggle\", function(state)\r\n    if state then\r\n        isRunning = true\r\n        local isRightClickHeld = false\r\n        local lockedPlayer = nil\r\n\r\n        -- Input handling\r\n        UserInputService.InputBegan:Connect(function(input, gameProcessed)\r\n            if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton2 then\r\n                isRightClickHeld = true\r\n                UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter\r\n            end\r\n        end)\r\n\r\n        UserInputService.InputEnded:Connect(function(input, gameProcessed)\r\n            if input.UserInputType == Enum.UserInputType.MouseButton2 then\r\n                isRightClickHeld = false\r\n                lockedPlayer = nil\r\n                UserInputService.MouseBehavior = Enum.MouseBehavior.Default\r\n            end\r\n        end)\r\n\r\n        -- Function to find the closest player\r\n        local function getClosestPlayer()\r\n            local closestPlayer = nil\r\n            local shortestDistance = math.huge\r\n            local localCharacter = player.Character\r\n            local localHumanoidRootPart = localCharacter and localCharacter:FindFirstChild(\"HumanoidRootPart\")\r\n            \r\n            if not localHumanoidRootPart then return nil end\r\n\r\n            for _, v in pairs(game.Players:GetPlayers()) do\r\n                if v ~= player then\r\n                    local char = v.Character\r\n                    local humanoidRootPart = char and char:FindFirstChild(\"HumanoidRootPart\")\r\n                    if humanoidRootPart then\r\n                        local distance = (localHumanoidRootPart.Position - humanoidRootPart.Position).Magnitude\r\n                        if distance \u003C shortestDistance then\r\n                            shortestDistance = distance\r\n                            closestPlayer = v\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n\r\n            return closestPlayer\r\n        end\r\n\r\n        -- Main loop\r\n        toggleLoop = coroutine.create(function()\r\n            while isRunning do\r\n                task.wait()\r\n                if isRightClickHeld then\r\n                    if not lockedPlayer or not lockedPlayer.Character or not lockedPlayer.Character:FindFirstChild(\"Head\") then\r\n                        lockedPlayer = getClosestPlayer()\r\n                    end\r\n\r\n                    UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter\r\n\r\n                    if lockedPlayer then\r\n                        local char = lockedPlayer.Character\r\n                        local head = char and char:FindFirstChild(\"Head\")\r\n                        if head then\r\n                            local cameraPosition = camera.CFrame.Position\r\n                            camera.CFrame = CFrame.new(cameraPosition, head.Position)\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end)\r\n        coroutine.resume(toggleLoop)\r\n    else\r\n        -- Turn off the aimbot\r\n        isRunning = false -- Stop the loop\r\n        UserInputService.MouseBehavior = Enum.MouseBehavior.Default -- Restore cursor movement\r\n    end\r\nend)\r\n\r\nLibrary.NewSpace()\r\nLibrary.NewDivider()\r\n\r\n-- Variable to control the updater loop\r\nlocal ESPEnabled = false\r\n\r\nLibrary.NewToggle(\"ESP Toggle\", function(state)\r\n    if state then\r\n        ESPEnabled = true -- Enable ESP updates\r\n\r\n        -- Define ESP color and transparency\r\n        local ESPColor = Color3.new(1, 0, 0) -- Red color\r\n        local ESPTransparency = 0.5 -- Semi-transparent\r\n\r\n        -- Function to add ESP to a character\r\n        local function addESPToCharacter(character)\r\n            if not character:FindFirstChild(\"HumanoidRootPart\") then return end\r\n\r\n            -- Check if Highlight already exists\r\n            if character:FindFirstChild(\"ESPHighlight\") then return end\r\n\r\n            -- Create a Highlight object\r\n            local highlight = Instance.new(\"Highlight\")\r\n            highlight.Name = \"ESPHighlight\"\r\n            highlight.Adornee = character\r\n            highlight.Parent = character\r\n            highlight.FillColor = ESPColor\r\n            highlight.FillTransparency = ESPTransparency\r\n            highlight.OutlineTransparency = ESPTransparency\r\n        end\r\n\r\n        -- Function to handle a player\r\n        local function handlePlayer(player)\r\n            -- Update ESP for an existing character\r\n            if player.Character then\r\n                addESPToCharacter(player.Character)\r\n            end\r\n\r\n            -- Listen for character resets\r\n            player.CharacterAdded:Connect(function(character)\r\n                addESPToCharacter(character)\r\n            end)\r\n        end\r\n\r\n        -- Main ESP updater loop\r\n        task.spawn(function()\r\n            while ESPEnabled do\r\n                -- Iterate through all players\r\n                for _, player in pairs(game.Players:GetPlayers()) do\r\n                    handlePlayer(player)\r\n                end\r\n                -- Wait 1 second before updating again\r\n                task.wait(1)\r\n            end\r\n        end)\r\n\r\n        -- Add ESP to players who join later\r\n        game.Players.PlayerAdded:Connect(function(player)\r\n            if ESPEnabled then\r\n                handlePlayer(player)\r\n            end\r\n        end)\r\n\r\n    else\r\n        ESPEnabled = false -- Disable ESP updates\r\n\r\n        -- Remove all highlights\r\n        for _, player in pairs(game.Players:GetPlayers()) do\r\n            if player.Character then\r\n                -- Find and remove Highlight objects\r\n                for _, obj in pairs(player.Character:GetChildren()) do\r\n                    if obj:IsA(\"Highlight\") and obj.Name == \"ESPHighlight\" then\r\n                        obj:Destroy()\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\n
